trigger:
  branches:
    include:
      - develop
      - master
      - lab
      - feature/*

pr:
  branches:
    include:
      - feature/*
      - develop
      - lab
      - tag/*

schedules:
  - cron: "40 14 * * *"
    displayName: Daily QA build
    branches:
      include:
        - develop
    always: false

# Set a Variable for the Purpose of the CICD run...
variables:
  - ${{ if eq(variables['build.SourceBranchName'], 'master') }}:
      - group: KingCobra-Prod-Vars
      - name: env
        value: "prod"
      - name: slot
        value: "production"
      - name: web
        value: "prod"
  - ${{ if eq(variables['build.SourceBranchName'], 'develop') }}:
      - group: KingCobra-Dev-Vars
      - name: env
        value: "dev"
      - name: slot
        value: "production"
      - name: web
        value: "dev"
  - ${{ if startsWith(variables['build.SourceBranch'], 'refs/heads/feature/') }}:
      - group: KingCobra-QA-Vars
      - name: env
        value: "qa"
      - name: slot
        value: "qa"
      - name: web
        value: "dev"
  - ${{ if eq(variables['build.SourceBranchName'], 'lab') }}:
      - group: KingCobra-Lab-Vars
      - name: env
        value: "lab"
      - name: slot
        value: "lab"
      - name: web
        value: "dev"
  - name: yarn_cache_folder
    value: $(Pipeline.Workspace)/.yarn
  - name: next_cache
    value: $(System.DefaultWorkingDirectory)/.next/cache
  - name: WasScheduledQA
    value: $[and(eq(variables['Build.Reason'], 'Schedule'),eq(variables['Build.SourceBranch'],'refs/heads/dev'))]
  - name: IsManualQA
    value: $[and(eq(variables['Build.SourceBranch'],'refs/heads/dev'), eq(variables.MANUAL_QA, 'True'))]
  - name: TriggerBranch
    value: $[variables['Build.SourceBranch']]
  - name: BuildReason
    value: $[variables['Build.Reason']]

# Use Multi-Stage Pipeline File to Combine CI & CD into one file
# This will allow the pipeline to differentiate the triggering Build.Reason.

pool:
  vmImage: "ubuntu-latest"

stages:
  - stage: BUILD

    jobs:
      - job: Build_Web_App
        workspace:
          clean: all

        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "14.x"
            displayName: 'Install Node Tool in $(env)'

          - script: yarn --frozen-lockfile
            displayName: Yarn Install

          - task: Cache@2
            inputs:
              key: next | $(Agent.OS) | yarn.lock
              path: $(next_cache)
            displayName: Cache NextJS

          - script: yarn build
            displayName: 'NextJS Build $(env) and $(build.SourceBranch)'

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: $(Agent.BuildDirectory)/s
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(env)
              replaceExistingArchive: true

          - publish: $(Build.ArtifactStagingDirectory)
            artifact: kingcobra

  - template: cd-pipeline.yml
    parameters:
      SERVICE_CONNECTION: AW-${{ upper(variables.web) }}-2.0
      STORAGE_ACCOUNT_RG: uc-dev-devops
      STORAGE_ACCOUNT: uc${{ variables.web }}devops
      ENV: ${{ variables.env }}
      SLOT: ${{ variables.slot }}
      URL: shop.${{ variables.env }}.car.com
      WEB: ${{ variables.web }}
      DEPENDS_ON: BUILD